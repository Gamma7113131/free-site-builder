{
    "name": "volt",
    "content": {
        "layouts": {
            "base.html": "BASE64"
        },
        "components": {
            "Grids": {
                "grid-1-2cols.html": "PGRpdiBpZD0iZHJhZ2dhYmxlLWdyaWQtMS0yIiBjbGFzcz0iY29udGFpbmVyIGRyYWdnYWJsZSIgZHJhZ2dhYmxlPSJ0cnVlIiBkYXRhLXR5cGU9ImdyaWQtM2NvbCIgZGF0YS1pbmZvPSJHUklEIC0gMS0yIENPTFMgQ29tcG9uZW50Ij4KICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgPGRpdiBpZD0iZ3JpZC0xLTJjb2wtMSIgY2xhc3M9ImRyb3B6b25lLWVsZW0gY29sLTEyIGNvbC14bC00IGNvbC1zbSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImlubkNvbCI+MzMlPC9kaXY+IAogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgaWQ9ImdyaWQtMS0yY29sLTIiIGNsYXNzPSJkcm9wem9uZS1lbGVtIGNvbC0xMiBjb2wteGwtOCBjb2wtc20iPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbm5Db2wiPjY2JTwvZGl2PiAKICAgICAgICA8L2Rpdj4KICAgIDwvZGl2Pgo8L2Rpdj4K",
                "grid-2-1cols.html": "PGRpdiBpZD0iZHJhZ2dhYmxlLWdyaWQtMi0xIiBjbGFzcz0iY29udGFpbmVyIGRyYWdnYWJsZSIgZHJhZ2dhYmxlPSJ0cnVlIiBkYXRhLXR5cGU9ImdyaWQtM2NvbCIgZGF0YS1pbmZvPSJHUklEIC0gMi0xIENPTFMgQ29tcG9uZW50Ij4KICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgPGRpdiBpZD0iZ3JpZC0yLTFjb2wtMSIgY2xhc3M9ImRyb3B6b25lLWVsZW0gY29sLTEyIGNvbC14bC04IGNvbC1zbSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImlubkNvbCI+NjYlPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBpZD0iZ3JpZC0yLTFjb2wtMiIgY2xhc3M9ImRyb3B6b25lLWVsZW0gY29sLTEyIGNvbC14bC00IGNvbC1zbSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImlubkNvbCI+MzMlPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KPC9kaXY+Cg==",
                "grid-3cols.html": "PGRpdiBpZD0iZHJhZ2dhYmxlLWdyaWQtMiIgY2xhc3M9ImNvbnRhaW5lciBkcmFnZ2FibGUiIGRyYWdnYWJsZT0idHJ1ZSIgZGF0YS10eXBlPSJncmlkLTNjb2wiIGRhdGEtaW5mbz0iR1JJRCAtIDMgUk9XUyBDb21wb25lbnQiPgogICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICA8ZGl2IGlkPSJncmlkLTNjb2wtMSIgY2xhc3M9ImRyb3B6b25lLWVsZW0gY29sLXNtIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW5uQ29sIj4zMyU8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGlkPSJncmlkLTNjb2wtMiIgY2xhc3M9ImRyb3B6b25lLWVsZW0gY29sLXNtIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW5uQ29sIj4zMyU8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGlkPSJncmlkLTNjb2wtMyIgY2xhc3M9ImRyb3B6b25lLWVsZW0gY29sLXNtIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW5uQ29sIj4zMyU8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2Pgo8L2Rpdj4K",
                "grid-2cols.html": "PGRpdiBpZD0iZHJhZ2dhYmxlLWdyaWQtMSIgY2xhc3M9ImNvbnRhaW5lciBkcmFnZ2FibGUiIGRyYWdnYWJsZT0idHJ1ZSIgZGF0YS10eXBlPSJncmlkLTJjb2wiIGRhdGEtaW5mbz0iR1JJRCAtIDIgUk9XUyBDb21wb25lbnQiPgogICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICA8ZGl2IGlkPSJncmlkLTJjb2wtMSIgY2xhc3M9ImRyb3B6b25lLWVsZW0gY29sLTEyIGNvbC14bC02Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW5uQ29sIj41MCU8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGlkPSJncmlkLTJjb2wtMiIgY2xhc3M9ImRyb3B6b25lLWVsZW0gY29sLTEyIGNvbC14bC02Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW5uQ29sIj41MCU8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2Pgo8L2Rpdj4K"
            },
            "Navigation": {
                "navigation-ph.html": "PGRpdiBpZD0iZHJhZ2dhYmxlLW5hdmlnYXRpb24tMS1wbGFjZWhvbGRlciIgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wteGwtNCBtYi00IGRyYWdnYWJsZSIgZHJhZ2dhYmxlPSJ0cnVlIgogICAgc3R5bGU9IndpZHRoOiAxMDAlOyI+CiAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgIDxpbWcgY2xhc3M9J2ltZy1mbHVpZCB3LTEwMCcKICAgICAgICAgICAgc3JjPSJodHRwczovL2dpdGh1Yi1wcm9kdWN0aW9uLXVzZXItYXNzZXQtNjIxMGRmLnMzLmFtYXpvbmF3cy5jb20vNTEwNzAxMDQvMjYxMDc1OTIyLWUwM2RlYmYzLTA4MDktNDQ0OS04OTFlLWExZTIwYTU4ZTU1MC5wbmciCiAgICAgICAgICAgIGFsdD0iIiAvPgogICAgPC9kaXY+CjwvZGl2Pg==",
                "navigation.html": "PG5hdiBpZD0iZHJhZ2dhYmxlLW5hdmlnYXRpb24tMSIgIGNsYXNzPSJuYXZiYXIgbmF2YmFyLXRvcCBuYXZiYXItZXhwYW5kIG5hdmJhci1kYXNoYm9hcmQgbXQtMCBwcy0wIHBlLTIgZHJhZ2dhYmxlIiBkcmFnZ2FibGU9InRydWUiIHN0eWxlPSJkaXNwbGF5OiBub25lOyI+CiAgICA8ZGl2IGNsYXNzPSJjb250YWluZXItZmx1aWQgcHgtMCI+CiAgICAgICAgPGRpdiBjbGFzcz0iZC1mbGV4IGp1c3RpZnktY29udGVudC1iZXR3ZWVuIHctMTAwIiBpZD0ibmF2YmFyU3VwcG9ydGVkQ29udGVudCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIiPgogICAgICAgICAgICAgICAgPCEtLSBTZWFyY2ggZm9ybSAtLT4KICAgICAgICAgICAgICAgIDxmb3JtIGNsYXNzPSJuYXZiYXItc2VhcmNoIGZvcm0taW5saW5lIiBpZD0ibmF2YmFyLXNlYXJjaC1tYWluIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbnB1dC1ncm91cCBpbnB1dC1ncm91cC1tZXJnZSBzZWFyY2gtYmFyIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImlucHV0LWdyb3VwLXRleHQiIGlkPSJ0b3BiYXItYWRkb24iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiBpY29uLXhzIiB4LWRlc2NyaXB0aW9uPSJIZXJvaWNvbiBuYW1lOiBzb2xpZC9zZWFyY2giCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB2aWV3Qm94PSIwIDAgMjAgMjAiIGZpbGw9ImN1cnJlbnRDb2xvciIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhcmlhLWhpZGRlbj0idHJ1ZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZmlsbC1ydWxlPSJldmVub2RkIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkPSJNOCA0YTQgNCAwIDEwMCA4IDQgNCAwIDAwMC04ek0yIDhhNiA2IDAgMTExMC44OSAzLjQ3Nmw0LjgxNyA0LjgxN2ExIDEgMCAwMS0xLjQxNCAxLjQxNGwtNC44MTYtNC44MTZBNiA2IDAgMDEyIDh6IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGlwLXJ1bGU9ImV2ZW5vZGQiPjwvcGF0aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBjbGFzcz0iZm9ybS1jb250cm9sIiBpZD0idG9wYmFySW5wdXRJY29uTGVmdCIgcGxhY2Vob2xkZXI9IlNlYXJjaCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFyaWEtbGFiZWw9IlNlYXJjaCIgYXJpYS1kZXNjcmliZWRieT0idG9wYmFyLWFkZG9uIj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZm9ybT4KICAgICAgICAgICAgICAgIDwhLS0gLyBTZWFyY2ggZm9ybSAtLT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwhLS0gTmF2YmFyIGxpbmtzIC0tPgogICAgICAgICAgICA8dWwgY2xhc3M9Im5hdmJhci1uYXYgYWxpZ24taXRlbXMtY2VudGVyIj4KICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ibmF2LWl0ZW0gZHJvcGRvd24iPgogICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJuYXYtbGluayB0ZXh0LWRhcmsgbm90aWZpY2F0aW9uLWJlbGwgdW5yZWFkIGRyb3Bkb3duLXRvZ2dsZSIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS11bnJlYWQtbm90aWZpY2F0aW9ucz0idHJ1ZSIgaHJlZj0iIyIgcm9sZT0iYnV0dG9uIiBkYXRhLWJzLXRvZ2dsZT0iZHJvcGRvd24iCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtYnMtZGlzcGxheT0ic3RhdGljIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24gaWNvbi1zbSB0ZXh0LWdyYXktOTAwIiBmaWxsPSJjdXJyZW50Q29sb3IiIHZpZXdCb3g9IjAgMCAyMCAyMCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGQ9Ik0xMCAyYTYgNiAwIDAwLTYgNnYzLjU4NmwtLjcwNy43MDdBMSAxIDAgMDA0IDE0aDEyYTEgMSAwIDAwLjcwNy0xLjcwN0wxNiAxMS41ODZWOGE2IDYgMCAwMC02LTZ6TTEwIDE4YTMgMyAwIDAxLTMtM2g2YTMgMyAwIDAxLTMgM3oiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wYXRoPgogICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz4KICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJuYXYtaXRlbSBkcm9wZG93biBtcy1sZy0zIj4KICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibmF2LWxpbmsgZHJvcGRvd24tdG9nZ2xlIHB0LTEgcHgtMCIgaHJlZj0iIyIgcm9sZT0iYnV0dG9uIiBkYXRhLWJzLXRvZ2dsZT0iZHJvcGRvd24iCiAgICAgICAgICAgICAgICAgICAgICAgIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVkaWEgZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJhdmF0YXIgcm91bmRlZC1jaXJjbGUiIGFsdD0iSW1hZ2UgcGxhY2Vob2xkZXIiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2FwcHNydjEtMTQ3YTEua3hjZG4uY29tL2J1aWxkZXIvdm9sdC9hc3NldHMvaW1nL3RlYW0vcHJvZmlsZS1waWN0dXJlLTMuanBnIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lZGlhLWJvZHkgbXMtMiB0ZXh0LWRhcmsgYWxpZ24taXRlbXMtY2VudGVyIGQtbm9uZSBkLWxnLWJsb2NrIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ibWItMCBmb250LXNtYWxsIGZ3LWJvbGQgdGV4dC1ncmF5LTkwMCI+Qm9ubmllIEdyZWVuPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgIDwvdWw+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KPC9uYXY+"
            },
            "Common": {
                "button.html": "PGRpdiBpZD0iZHJhZ2dhYmxlLWRpdi01IiBjbGFzcz0iY21uQm94IGRyYWdnYWJsZSIgc3R5bGU9IndpZHRoOiAxNXJlbTsiIGRyYWdnYWJsZT0idHJ1ZSIgZGF0YS10eXBlPSJidXR0b24iIGRhdGEtaW5mbz0iQnV0dG9uIENvbXBvbmVudCI+CiAgICAgICAgPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IiB0eXBlPSJidXR0b24iPlByaW1hcnk8L2J1dHRvbj4KPC9kaXY+",
                "breadcrumb.html": "PGRpdiBpZD0iZHJhZ2dhYmxlLWJyZWFkY3J1bWItMSIgY2xhc3M9ImNtbkJveCBkcmFnZ2FibGUiIGRyYWdnYWJsZT0idHJ1ZSIgZGF0YS10eXBlPSJidXR0b24iIHN0eWxlPSJkaXNwbGF5OiBub25lOyIKICAgIGRhdGEtaW5mbz0iQnJlYWRjcnVtYiBDb21wb25lbnQiPgoKICAgIDxkaXYgY2xhc3M9InB5LTQiPgogICAgICAgIDxuYXYgYXJpYS1sYWJlbD0iYnJlYWRjcnVtYiIgY2xhc3M9ImQtbm9uZSBkLW1kLWlubGluZS1ibG9jayI+CiAgICAgICAgICAgIDxvbCBjbGFzcz0iYnJlYWRjcnVtYiBicmVhZGNydW1iLWRhcmsgYnJlYWRjcnVtYi10cmFuc3BhcmVudCI+CiAgICAgICAgICAgICAgICA8bGkgY2xhc3M9ImJyZWFkY3J1bWItaXRlbSI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iIyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24gaWNvbi14eHMiIGZpbGw9Im5vbmUiIHN0cm9rZT0iY3VycmVudENvbG9yIiB2aWV3Qm94PSIwIDAgMjQgMjQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggc3Ryb2tlLWxpbmVjYXA9InJvdW5kIiBzdHJva2UtbGluZWpvaW49InJvdW5kIiBzdHJva2Utd2lkdGg9IjIiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZD0iTTMgMTJsMi0ybTAgMGw3LTcgNyA3TTUgMTB2MTBhMSAxIDAgMDAxIDFoM20xMC0xMWwyIDJtLTItMnYxMGExIDEgMCAwMS0xIDFoLTNtLTYgMGExIDEgMCAwMDEtMXYtNGExIDEgMCAwMTEtMWgyYTEgMSAwIDAxMSAxdjRhMSAxIDAgMDAxIDFtLTYgMGg2Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcGF0aD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9zdmc+CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iYnJlYWRjcnVtYi1pdGVtIj48YSBocmVmPSIjIj5UYWJsZXM8L2E+PC9saT4KICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0iYnJlYWRjcnVtYi1pdGVtIGFjdGl2ZSIgYXJpYS1jdXJyZW50PSJwYWdlIj5Cb290c3RyYXAgdGFibGVzPC9saT4KICAgICAgICAgICAgPC9vbD4KICAgICAgICA8L25hdj4KICAgICAgICA8ZGl2IGNsYXNzPSJkLWZsZXgganVzdGlmeS1jb250ZW50LWJldHdlZW4gdy0xMDAgZmxleC13cmFwIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWItMyBtYi1sZy0wIj4KICAgICAgICAgICAgICAgIDxoMSBjbGFzcz0iaDQiPkJvb3RzdHJhcCB0YWJsZXM8L2gxPgogICAgICAgICAgICAgICAgPHAgY2xhc3M9Im1iLTAiPkRvemVucyBvZiByZXVzYWJsZSBjb21wb25lbnRzIGJ1aWx0IHRvIHByb3ZpZGUgYnV0dG9ucywgYWxlcnRzLCBwb3BvdmVycywgYW5kIG1vcmUuPC9wPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIDxhIGhyZWY9IiMiIGNsYXNzPSJidG4gYnRuLW91dGxpbmUtZ3JheS02MDAgZC1pbmxpbmUtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIiPgogICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24gaWNvbi14cyBtZS0xIiBmaWxsPSJjdXJyZW50Q29sb3IiIHZpZXdCb3g9IjAgMCAyMCAyMCIKICAgICAgICAgICAgICAgICAgICAgICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZmlsbC1ydWxlPSJldmVub2RkIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZD0iTTE4IDEwYTggOCAwIDExLTE2IDAgOCA4IDAgMDExNiAwem0tOC0zYTEgMSAwIDAwLS44NjcuNSAxIDEgMCAxMS0xLjczMS0xQTMgMyAwIDAxMTMgOGEzLjAwMSAzLjAwMSAwIDAxLTIgMi44M1YxMWExIDEgMCAxMS0yIDB2LTFhMSAxIDAgMDExLTEgMSAxIDAgMTAwLTJ6bTAgOGExIDEgMCAxMDAtMiAxIDEgMCAwMDAgMnoiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGlwLXJ1bGU9ImV2ZW5vZGQiPjwvcGF0aD4KICAgICAgICAgICAgICAgICAgICA8L3N2Zz4KICAgICAgICAgICAgICAgICAgICBCb290c3RyYXAgVGFibGVzIERvY3MKICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCjwvZGl2Pg==",
                "dropdown.html": "PGRpdiBpZD0iZHJhZ2dhYmxlLWRyb3Bkb3duLTEiIGNsYXNzPSJjbW5Cb3ggZHJhZ2dhYmxlIiBkcmFnZ2FibGU9InRydWUiIGRhdGEtdHlwZT0iYnV0dG9uIiBzdHlsZT0iZGlzcGxheTogbm9uZTsiCiAgICBkYXRhLWluZm89IkJ1dHRvbiBDb21wb25lbnQiPgoKICAgIDxkaXYgY2xhc3M9ImRyb3Bkb3duIj4KICAgICAgICA8YnV0dG9uIGNsYXNzPSJidG4gYnRuLWdyYXktODAwIGQtaW5saW5lLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIG1lLTIgZHJvcGRvd24tdG9nZ2xlIiBkYXRhLWJzLXRvZ2dsZT0iZHJvcGRvd24iCiAgICAgICAgICAgIGFyaWEtaGFzcG9wdXA9InRydWUiIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj4KICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiBpY29uLXhzIG1lLTIiIGZpbGw9Im5vbmUiIHN0cm9rZT0iY3VycmVudENvbG9yIiB2aWV3Qm94PSIwIDAgMjQgMjQiCiAgICAgICAgICAgICAgICB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciPgogICAgICAgICAgICAgICAgPHBhdGggc3Ryb2tlLWxpbmVjYXA9InJvdW5kIiBzdHJva2UtbGluZWpvaW49InJvdW5kIiBzdHJva2Utd2lkdGg9IjIiIGQ9Ik0xMiA2djZtMCAwdjZtMC02aDZtLTYgMEg2Ij4KICAgICAgICAgICAgICAgIDwvcGF0aD4KICAgICAgICAgICAgPC9zdmc+CiAgICAgICAgICAgIE5ldyBUYXNrCiAgICAgICAgPC9idXR0b24+CiAgICAgICAgPGRpdiBjbGFzcz0iZHJvcGRvd24tbWVudSBkYXNoYm9hcmQtZHJvcGRvd24gZHJvcGRvd24tbWVudS1zdGFydCBtdC0yIHB5LTEiPgogICAgICAgICAgICA8YSBjbGFzcz0iZHJvcGRvd24taXRlbSBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIiBocmVmPSIjIj4KICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9ImRyb3Bkb3duLWljb24gdGV4dC1ncmF5LTQwMCBtZS0yIiBmaWxsPSJjdXJyZW50Q29sb3IiIHZpZXdCb3g9IjAgMCAyMCAyMCIKICAgICAgICAgICAgICAgICAgICB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciPgogICAgICAgICAgICAgICAgICAgIDxwYXRoCiAgICAgICAgICAgICAgICAgICAgICAgIGQ9Ik04IDlhMyAzIDAgMTAwLTYgMyAzIDAgMDAwIDZ6TTggMTFhNiA2IDAgMDE2IDZIMmE2IDYgMCAwMTYtNnpNMTYgN2ExIDEgMCAxMC0yIDB2MWgtMWExIDEgMCAxMDAgMmgxdjFhMSAxIDAgMTAyIDB2LTFoMWExIDEgMCAxMDAtMmgtMVY3eiI+CiAgICAgICAgICAgICAgICAgICAgPC9wYXRoPgogICAgICAgICAgICAgICAgPC9zdmc+CiAgICAgICAgICAgICAgICBBZGQgVXNlcgogICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDxhIGNsYXNzPSJkcm9wZG93bi1pdGVtIGQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIiIGhyZWY9IiMiPgogICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iZHJvcGRvd24taWNvbiB0ZXh0LWdyYXktNDAwIG1lLTIiIGZpbGw9ImN1cnJlbnRDb2xvciIgdmlld0JveD0iMCAwIDIwIDIwIgogICAgICAgICAgICAgICAgICAgIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI+CiAgICAgICAgICAgICAgICAgICAgPHBhdGgKICAgICAgICAgICAgICAgICAgICAgICAgZD0iTTcgM2ExIDEgMCAwMDAgMmg2YTEgMSAwIDEwMC0ySDd6TTQgN2ExIDEgMCAwMTEtMWgxMGExIDEgMCAxMTAgMkg1YTEgMSAwIDAxLTEtMXpNMiAxMWEyIDIgMCAwMTItMmgxMmEyIDIgMCAwMTIgMnY0YTIgMiAwIDAxLTIgMkg0YTIgMiAwIDAxLTItMnYtNHoiPgogICAgICAgICAgICAgICAgICAgIDwvcGF0aD4KICAgICAgICAgICAgICAgIDwvc3ZnPgogICAgICAgICAgICAgICAgQWRkIFdpZGdldAogICAgICAgICAgICA8L2E+CiAgICAgICAgICAgIDxhIGNsYXNzPSJkcm9wZG93bi1pdGVtIGQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIiIGhyZWY9IiMiPgogICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iZHJvcGRvd24taWNvbiB0ZXh0LWdyYXktNDAwIG1lLTIiIGZpbGw9ImN1cnJlbnRDb2xvciIgdmlld0JveD0iMCAwIDIwIDIwIgogICAgICAgICAgICAgICAgICAgIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI+CiAgICAgICAgICAgICAgICAgICAgPHBhdGgKICAgICAgICAgICAgICAgICAgICAgICAgZD0iTTUuNSAxM2EzLjUgMy41IDAgMDEtLjM2OS02Ljk4IDQgNCAwIDExNy43NTMtMS45NzdBNC41IDQuNSAwIDExMTMuNSAxM0gxMVY5LjQxM2wxLjI5MyAxLjI5M2ExIDEgMCAwMDEuNDE0LTEuNDE0bC0zLTNhMSAxIDAgMDAtMS40MTQgMGwtMyAzYTEgMSAwIDAwMS40MTQgMS40MTRMOSA5LjQxNFYxM0g1LjV6Ij4KICAgICAgICAgICAgICAgICAgICA8L3BhdGg+CiAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTkgMTNoMnY1YTEgMSAwIDExLTIgMHYtNXoiPjwvcGF0aD4KICAgICAgICAgICAgICAgIDwvc3ZnPgogICAgICAgICAgICAgICAgVXBsb2FkIEZpbGVzCiAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPGEgY2xhc3M9ImRyb3Bkb3duLWl0ZW0gZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciIgaHJlZj0iIyI+CiAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPSJkcm9wZG93bi1pY29uIHRleHQtZ3JheS00MDAgbWUtMiIgZmlsbD0iY3VycmVudENvbG9yIiB2aWV3Qm94PSIwIDAgMjAgMjAiCiAgICAgICAgICAgICAgICAgICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICAgICAgICAgICAgICAgICAgICA8cGF0aCBmaWxsLXJ1bGU9ImV2ZW5vZGQiCiAgICAgICAgICAgICAgICAgICAgICAgIGQ9Ik0yLjE2NiA0Ljk5OUExMS45NTQgMTEuOTU0IDAgMDAxMCAxLjk0NCAxMS45NTQgMTEuOTU0IDAgMDAxNy44MzQgNWMuMTEuNjUuMTY2IDEuMzIuMTY2IDIuMDAxIDAgNS4yMjUtMy4zNCA5LjY3LTggMTEuMzE3QzUuMzQgMTYuNjcgMiAxMi4yMjUgMiA3YzAtLjY4Mi4wNTctMS4zNS4xNjYtMi4wMDF6bTExLjU0MSAzLjcwOGExIDEgMCAwMC0xLjQxNC0xLjQxNEw5IDEwLjU4NiA3LjcwNyA5LjI5M2ExIDEgMCAwMC0xLjQxNCAxLjQxNGwyIDJhMSAxIDAgMDAxLjQxNCAwbDQtNHoiCiAgICAgICAgICAgICAgICAgICAgICAgIGNsaXAtcnVsZT0iZXZlbm9kZCI+PC9wYXRoPgogICAgICAgICAgICAgICAgPC9zdmc+CiAgICAgICAgICAgICAgICBQcmV2aWV3IFNlY3VyaXR5CiAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPGRpdiByb2xlPSJzZXBhcmF0b3IiIGNsYXNzPSJkcm9wZG93bi1kaXZpZGVyIG15LTEiPjwvZGl2PgogICAgICAgICAgICA8YSBjbGFzcz0iZHJvcGRvd24taXRlbSBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIiBocmVmPSIjIj4KICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9ImRyb3Bkb3duLWljb24gdGV4dC1kYW5nZXIgbWUtMiIgZmlsbD0iY3VycmVudENvbG9yIiB2aWV3Qm94PSIwIDAgMjAgMjAiCiAgICAgICAgICAgICAgICAgICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICAgICAgICAgICAgICAgICAgICA8cGF0aCBmaWxsLXJ1bGU9ImV2ZW5vZGQiCiAgICAgICAgICAgICAgICAgICAgICAgIGQ9Ik0xMi4zOTUgMi41NTNhMSAxIDAgMDAtMS40NS0uMzg1Yy0uMzQ1LjIzLS42MTQuNTU4LS44MjIuODgtLjIxNC4zMy0uNDAzLjcxMy0uNTcgMS4xMTYtLjMzNC44MDQtLjYxNCAxLjc2OC0uODQgMi43MzRhMzEuMzY1IDMxLjM2NSAwIDAwLS42MTMgMy41OCAyLjY0IDIuNjQgMCAwMS0uOTQ1LTEuMDY3Yy0uMzI4LS42OC0uMzk4LTEuNTM0LS4zOTgtMi42NTRBMSAxIDAgMDA1LjA1IDYuMDUgNi45ODEgNi45ODEgMCAwMDMgMTFhNyA3IDAgMTAxMS45NS00Ljk1Yy0uNTkyLS41OTEtLjk4LS45ODUtMS4zNDgtMS40NjctLjM2My0uNDc2LS43MjQtMS4wNjMtMS4yMDctMi4wM3pNMTIuMTIgMTUuMTJBMyAzIDAgMDE3IDEzcy44NzkuNSAyLjUuNWMwLTEgLjUtNCAxLjI1LTQuNS41IDEgLjc4NiAxLjI5MyAxLjM3MSAxLjg3OUEyLjk5IDIuOTkgMCAwMTEzIDEzYTIuOTkgMi45OSAwIDAxLS44NzkgMi4xMjF6IgogICAgICAgICAgICAgICAgICAgICAgICBjbGlwLXJ1bGU9ImV2ZW5vZGQiPjwvcGF0aD4KICAgICAgICAgICAgICAgIDwvc3ZnPgogICAgICAgICAgICAgICAgR2V0IFN1cHBvcnQKICAgICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+Cgo8L2Rpdj4=",
                "breadcrumb-ph.html": "PGRpdiBpZD0iZHJhZ2dhYmxlLWJyZWFkY3J1bWItMS1wbGFjZWhvbGRlciIgY2xhc3M9ImNvbC0xMiBjb2wtc20tNiBjb2wteGwtNCBtYi00IGRyYWdnYWJsZSIgZHJhZ2dhYmxlPSJ0cnVlIgogICAgc3R5bGU9IndpZHRoOiAxMDAlOyI+CiAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgIDxpbWcgY2xhc3M9J2ltZy1mbHVpZCB3LTEwMCcKICAgICAgICAgICAgc3JjPSJodHRwczovL2dpdGh1Yi1wcm9kdWN0aW9uLXVzZXItYXNzZXQtNjIxMGRmLnMzLmFtYXpvbmF3cy5jb20vNTEwNzAxMDQvMjYxMDgwNjEzLWYyYjU2NTBjLTc2ODItNDE5NS1hZTljLTI5NTEzZGM1MTBiYi5wbmciCiAgICAgICAgICAgIGFsdD0iIiAvPgogICAgPC9kaXY+CjwvZGl2Pg==",
                "dropdown-ph.html": "PGRpdiBpZD0iZHJhZ2dhYmxlLWRyb3Bkb3duLTEtcGxhY2Vob2xkZXIiIGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLXhsLTQgbWItNCBkcmFnZ2FibGUiIGRyYWdnYWJsZT0idHJ1ZSIKICAgIHN0eWxlPSJ3aWR0aDogMTAwJTsiPgogICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICA8aW1nIGNsYXNzPSdpbWctZmx1aWQgdy0xMDAnCiAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9naXRodWItcHJvZHVjdGlvbi11c2VyLWFzc2V0LTYyMTBkZi5zMy5hbWF6b25hd3MuY29tLzUxMDcwMTA0LzI2MTA4MzU2NC05ZTEzMTI4MS1hOTk5LTRhYzUtODAyNi0wMDVkYzk3YmFkNzEucG5nIgogICAgICAgICAgICBhbHQ9IiIgLz4KICAgIDwvZGl2Pgo8L2Rpdj4=",
                "alerts.html": "PGRpdiBpZD0iZHJhZ2dhYmxlLWRpdi03IiBjbGFzcz0iY21uQm94IGRyYWdnYWJsZSIgc3R5bGU9IndpZHRoOiAxNXJlbTsiIGRyYWdnYWJsZT0idHJ1ZSIgZGF0YS10eXBlPSJkaXYiIGRhdGEtaW5mbz0iRElWIENvbXBvbmVudCI+CiAgICA8ZGl2IGNsYXNzPSJhbGVydCBhbGVydC1pbmZvIGZuLTEzIiByb2xlPSJhbGVydCI+CiAgICAgICAgU2ltcGxlIHByaW1hcnkgYWxlcnQuCiAgICA8L2Rpdj4KPC9kaXY+"
            },
            "Tables": {
                "datatable-ph.html": "PGRpdiBpZD0iZHJhZ2dhYmxlLWRhdGF0YWJsZS0xLXBsYWNlaG9sZGVyIiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC14bC00IG1iLTQgZHJhZ2dhYmxlIiBkcmFnZ2FibGU9InRydWUiDQogICAgc3R5bGU9IndpZHRoOiAxMDAlOyI+DQogICAgPGRpdiBjbGFzcz0icm93Ij4NCiAgICAgICAgPGltZyBjbGFzcz0naW1nLWZsdWlkIHctMTAwJw0KICAgICAgICAgICAgc3JjPSJodHRwczovL2dpdGh1Yi1wcm9kdWN0aW9uLXVzZXItYXNzZXQtNjIxMGRmLnMzLmFtYXpvbmF3cy5jb20vNTEwNzAxMDQvMjU5MTcxMDA3LTgwMTViZGY3LTcxZDctNDVkMS05NGM1LTU5MWE2ZWJjMGRmMi5wbmciDQogICAgICAgICAgICBhbHQ9IiIgLz4NCiAgICA8L2Rpdj4NCjwvZGl2Pg==",
                "datatable.html": "",
                "table-ph.html": "PGRpdiBpZD0iZHJhZ2dhYmxlLXRhYmxlLTEtcGxhY2Vob2xkZXIiIGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLXhsLTQgbWItNCBkcmFnZ2FibGUiIGRyYWdnYWJsZT0idHJ1ZSINCiAgICBzdHlsZT0id2lkdGg6IDEwMCU7Ij4NCiAgICA8ZGl2IGNsYXNzPSJyb3ciPg0KICAgICAgICA8aW1nIGNsYXNzPSdpbWctZmx1aWQgdy0xMDAnDQogICAgICAgICAgICBzcmM9Imh0dHBzOi8vZ2l0aHViLXByb2R1Y3Rpb24tdXNlci1hc3NldC02MjEwZGYuczMuYW1hem9uYXdzLmNvbS81MTA3MDEwNC8yNjEwODUxNTMtYWFkZGUwZTItYTk4MC00N2FjLThlMDUtODFkMzgyMmZlMTc0LnBuZyINCiAgICAgICAgICAgIGFsdD0iIiAvPg0KICAgIDwvZGl2Pg0KPC9kaXY+",
                "table.html": "",
                "table2-ph.html": "PGRpdiBpZD0iZHJhZ2dhYmxlLXRhYmxlLTItcGxhY2Vob2xkZXIiIGNsYXNzPSJjb2wtMTIgY29sLXNtLTYgY29sLXhsLTQgbWItNCBkcmFnZ2FibGUiIGRyYWdnYWJsZT0idHJ1ZSINCiAgICBzdHlsZT0id2lkdGg6IDEwMCU7Ij4NCiAgICA8ZGl2IGNsYXNzPSJyb3ciPg0KICAgICAgICA8aW1nIGNsYXNzPSdpbWctZmx1aWQgdy0xMDAnDQogICAgICAgICAgICBzcmM9Imh0dHBzOi8vZ2l0aHViLXByb2R1Y3Rpb24tdXNlci1hc3NldC02MjEwZGYuczMuYW1hem9uYXdzLmNvbS81MTA3MDEwNC8yNjEwODYwNTMtMTcwNTAxNGMtNGJmNy00N2YxLThhZjQtYjk0OTc3M2Y1YzNkLnBuZyINCiAgICAgICAgICAgIGFsdD0iIiAvPg0KICAgIDwvZGl2Pg0KPC9kaXY+",
                "table2.html": ""
            },
            "Widgets": {
                "widget2-ph.html": "PGRpdiBpZD0iZHJhZ2dhYmxlLXdpZGdldC0yLXBsYWNlaG9sZGVyIiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC14bC00IG1iLTQgZHJhZ2dhYmxlIiBkcmFnZ2FibGU9InRydWUiCiAgICBzdHlsZT0id2lkdGg6IDEwMCU7Ij4KICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgPGltZyBjbGFzcz0naW1nLWZsdWlkIHctMTAwJwogICAgICAgICAgICBzcmM9Imh0dHBzOi8vZ2l0aHViLXByb2R1Y3Rpb24tdXNlci1hc3NldC02MjEwZGYuczMuYW1hem9uYXdzLmNvbS81MTA3MDEwNC8yNTkwMzc4MzYtMzM4MmEwOTEtODQ2Mi00NDhlLWEwY2UtZDY2MDY1OWVmYTMyLnBuZyIKICAgICAgICAgICAgYWx0PSIiIC8+CiAgICA8L2Rpdj4KPC9kaXY+",
                "widget-ph.html": "PGRpdiBpZD0iZHJhZ2dhYmxlLXdpZGdldC0xLXBsYWNlaG9sZGVyIiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC14bC00IG1iLTQgZHJhZ2dhYmxlIiBkcmFnZ2FibGU9InRydWUiCiAgICBzdHlsZT0id2lkdGg6IDEwMCU7Ij4KICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgPGltZyBjbGFzcz0naW1nLWZsdWlkIHctMTAwJwogICAgICAgICAgICBzcmM9Imh0dHBzOi8vZ2l0aHViLXByb2R1Y3Rpb24tdXNlci1hc3NldC02MjEwZGYuczMuYW1hem9uYXdzLmNvbS81MTA3MDEwNC8yNTkwMzYwMTUtNWRjZWNmNDQtN2RmMS00NmNjLWE1NWItOWM4NDhjYTkzYjczLnBuZyIKICAgICAgICAgICAgYWx0PSIiIC8+CiAgICA8L2Rpdj4KPC9kaXY+",
                "widget3-ph.html": "PGRpdiBpZD0iZHJhZ2dhYmxlLXdpZGdldC0zLXBsYWNlaG9sZGVyIiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC14bC00IG1iLTQgZHJhZ2dhYmxlIiBkcmFnZ2FibGU9InRydWUiCiAgICBzdHlsZT0id2lkdGg6IDEwMCU7Ij4KICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgPGltZyBjbGFzcz0naW1nLWZsdWlkIHctMTAwJwogICAgICAgICAgICBzcmM9Imh0dHBzOi8vZ2l0aHViLXByb2R1Y3Rpb24tdXNlci1hc3NldC02MjEwZGYuczMuYW1hem9uYXdzLmNvbS81MTA3MDEwNC8yNTkwMzg2MjctOGViMmRjYTAtZjcxOC00YTIxLWFjNDUtMzBiY2VlZDU3NWNiLnBuZyIKICAgICAgICAgICAgYWx0PSIiIC8+CiAgICA8L2Rpdj4KPC9kaXY+",
                "widget6.html": "",
                "widget8-ph.html": "PGRpdiBpZD0iZHJhZ2dhYmxlLXdpZGdldC04LXBsYWNlaG9sZGVyIiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC14bC00IG1iLTQgZHJhZ2dhYmxlIiBkcmFnZ2FibGU9InRydWUiCiAgICBzdHlsZT0id2lkdGg6IDEwMCU7Ij4KICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgPGltZyBjbGFzcz0naW1nLWZsdWlkIHctMTAwJwogICAgICAgICAgICBzcmM9Ii9pbWcvd2RndDguanBnIgogICAgICAgICAgICBhbHQ9IiIgLz4KICAgIDwvZGl2Pgo8L2Rpdj4=",
                "widget7.html": "PGRpdiBpZD0iZHJhZ2dhYmxlLXdpZGdldC03IiBjbGFzcz0iY29sLTEyIGNvbC1zbS0xMiBjb2wteGwtMTIgbWItNCBkcmFnZ2FibGUiIGRyYWdnYWJsZT0idHJ1ZSIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij4KICA8ZGl2IGNsYXNzPSJjYXJkIGJvcmRlci0wIHNoYWRvdyI+CiAgICA8ZGl2IGNsYXNzPSJjYXJkLWJvZHkiPgogICAgICA8ZGl2IGNsYXNzPSJyb3cgZC1ibG9jayBkLXhsLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXhsLTUgdGV4dC14bC1jZW50ZXIgbWItMyBtYi14bC0wIGQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIganVzdGlmeS1jb250ZW50LXhsLWNlbnRlciI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJpY29uLXNoYXBlIGljb24tc2hhcGUtdGVydGlhcnkgcm91bmRlZCBtZS00IG1lLXNtLTAiPjxzdmcgY2xhc3M9Imljb24gaWNvbi1tZCIgZmlsbD0iY3VycmVudENvbG9yIgogICAgICAgICAgICAgIHZpZXdCb3g9IjAgMCAyMCAyMCIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICAgICAgICAgICAgICA8cGF0aCBmaWxsLXJ1bGU9ImV2ZW5vZGQiCiAgICAgICAgICAgICAgICBkPSJNMyAzYTEgMSAwIDAwMCAydjhhMiAyIDAgMDAyIDJoMi41ODZsLTEuMjkzIDEuMjkzYTEgMSAwIDEwMS40MTQgMS40MTRMMTAgMTUuNDE0bDIuMjkzIDIuMjkzYTEgMSAwIDAwMS40MTQtMS40MTRMMTIuNDE0IDE1SDE1YTIgMiAwIDAwMi0yVjVhMSAxIDAgMTAwLTJIM3ptMTEuNzA3IDQuNzA3YTEgMSAwIDAwLTEuNDE0LTEuNDE0TDEwIDkuNTg2IDguNzA3IDguMjkzYTEgMSAwIDAwLTEuNDE0IDBsLTIgMmExIDEgMCAxMDEuNDE0IDEuNDE0TDggMTAuNDE0bDEuMjkzIDEuMjkzYTEgMSAwIDAwMS40MTQgMGw0LTR6IgogICAgICAgICAgICAgICAgY2xpcC1ydWxlPSJldmVub2RkIj48L3BhdGg+CiAgICAgICAgICAgIDwvc3ZnPjwvZGl2PgogICAgICAgICAgPGRpdiBjbGFzcz0iZC1zbS1ub25lIj4KICAgICAgICAgICAgPGgyIGNsYXNzPSJmdy1leHRyYWJvbGQgaDUiPkJvdW5jZSBSYXRlPC9oMj4KICAgICAgICAgICAgPGgzIGNsYXNzPSJtYi0xIj41MC44OCU8L2gzPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC14bC03IHB4LXhsLTAiPgogICAgICAgICAgPGRpdiBjbGFzcz0iZC1ub25lIGQtc20tYmxvY2siPgogICAgICAgICAgICA8aDIgY2xhc3M9Img1Ij5Cb3VuY2UgUmF0ZTwvaDI+CiAgICAgICAgICAgIDxoMyBjbGFzcz0iZnctZXh0cmFib2xkIG1iLTEiPjUwLjg4JTwvaDM+CiAgICAgICAgICA8L2Rpdj48c21hbGw+RmViIDEgLSBBcHIgMTwvc21hbGw+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJzbWFsbCBkLWZsZXggbXQtMSI+PHN2ZyBjbGFzcz0iaWNvbiBpY29uLXhzIHRleHQtc3VjY2VzcyIgZmlsbD0iY3VycmVudENvbG9yIiB2aWV3Qm94PSIwIDAgMjAgMjAiCiAgICAgICAgICAgICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICAgICAgICAgICAgICA8cGF0aCBmaWxsLXJ1bGU9ImV2ZW5vZGQiCiAgICAgICAgICAgICAgICBkPSJNNS4yOTMgNy4yOTNhMSAxIDAgMDExLjQxNCAwTDEwIDEwLjU4NmwzLjI5My0zLjI5M2ExIDEgMCAxMTEuNDE0IDEuNDE0bC00IDRhMSAxIDAgMDEtMS40MTQgMGwtNC00YTEgMSAwIDAxMC0xLjQxNHoiCiAgICAgICAgICAgICAgICBjbGlwLXJ1bGU9ImV2ZW5vZGQiPjwvcGF0aD4KICAgICAgICAgICAgPC9zdmc+CiAgICAgICAgICAgIDxkaXY+PHNwYW4gY2xhc3M9InRleHQtc3VjY2VzcyBmdy1ib2xkZXIgbWUtMSI+NCU8L3NwYW4+IFNpbmNlIGxhc3QgbW9udGg8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDwvZGl2Pgo8L2Rpdj4=",
                "widget4.html": "PGRpdiBpZD0iZHJhZ2dhYmxlLXdpZGdldC00IiBjbGFzcz0iY29sLTEyIGNvbC1zbS0xMiBjb2wteGwtMTIgbWItNCBkcmFnZ2FibGUiIGRyYWdnYWJsZT0idHJ1ZSIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij4KICAgIDxkaXYgY2xhc3M9ImNhcmQgYm9yZGVyLTAgc2hhZG93Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWhlYWRlciBib3JkZXItYm90dG9tIGQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIganVzdGlmeS1jb250ZW50LWJldHdlZW4iPgogICAgICAgICAgICA8aDIgY2xhc3M9ImZzLTUgZnctYm9sZCBtYi0wIj5Qcm9ncmVzcyB0cmFjazwvaDI+CiAgICAgICAgICAgICA8YSBocmVmPSIjIiBjbGFzcz0iYnRuIGJ0bi1zbSBidG4tcHJpbWFyeSI+U2VlIHRhc2tzPC9hPgogICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWJvZHkiPgogICAgICAgICAgICA8IS0tIFByb2plY3QgMSAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93IG1iLTQiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLWF1dG8iPgogICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24gaWNvbi1zbSB0ZXh0LWdyYXktNTAwIiBmaWxsPSJjdXJyZW50Q29sb3IiIHZpZXdCb3g9IjAgMCAyMCAyMCIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj48cGF0aCBkPSJNOSAyYTEgMSAwIDAwMCAyaDJhMSAxIDAgMTAwLTJIOXoiPjwvcGF0aD48cGF0aCBmaWxsLXJ1bGU9ImV2ZW5vZGQiIGQ9Ik00IDVhMiAyIDAgMDEyLTIgMyAzIDAgMDAzIDNoMmEzIDMgMCAwMDMtMyAyIDIgMCAwMTIgMnYxMWEyIDIgMCAwMS0yIDJINmEyIDIgMCAwMS0yLTJWNXptMyA0YTEgMSAwIDAwMCAyaC4wMWExIDEgMCAxMDAtMkg3em0zIDBhMSAxIDAgMDAwIDJoM2ExIDEgMCAxMDAtMmgtM3ptLTMgNGExIDEgMCAxMDAgMmguMDFhMSAxIDAgMTAwLTJIN3ptMyAwYTEgMSAwIDEwMCAyaDNhMSAxIDAgMTAwLTJoLTN6IiBjbGlwLXJ1bGU9ImV2ZW5vZGQiPjwvcGF0aD48L3N2Zz4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9ncmVzcy13cmFwcGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZ3Jlc3MtaW5mbyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJoNiBtYi0wIj5Sb2NrZXQgLSBTYWFTIFRlbXBsYXRlPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzbWFsbCBmdy1ib2xkIHRleHQtZ3JheS01MDAiPjxzcGFuPjc1ICU8L3NwYW4+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9ncmVzcyBtYi0wIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2dyZXNzLWJhciBiZy1zdWNjZXNzIiByb2xlPSJwcm9ncmVzc2JhciIgYXJpYS12YWx1ZW5vdz0iNzUiIGFyaWEtdmFsdWVtaW49IjAiIGFyaWEtdmFsdWVtYXg9IjEwMCIgc3R5bGU9IndpZHRoOiA3NSU7Ij48L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwhLS0gUHJvamVjdCAyIC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3cgYWxpZ24taXRlbXMtY2VudGVyIG1iLTQiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLWF1dG8iPgogICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24gaWNvbi1zbSB0ZXh0LWdyYXktNTAwIiBmaWxsPSJjdXJyZW50Q29sb3IiIHZpZXdCb3g9IjAgMCAyMCAyMCIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj48cGF0aCBkPSJNOSAyYTEgMSAwIDAwMCAyaDJhMSAxIDAgMTAwLTJIOXoiPjwvcGF0aD48cGF0aCBmaWxsLXJ1bGU9ImV2ZW5vZGQiIGQ9Ik00IDVhMiAyIDAgMDEyLTIgMyAzIDAgMDAzIDNoMmEzIDMgMCAwMDMtMyAyIDIgMCAwMTIgMnYxMWEyIDIgMCAwMS0yIDJINmEyIDIgMCAwMS0yLTJWNXptMyA0YTEgMSAwIDAwMCAyaC4wMWExIDEgMCAxMDAtMkg3em0zIDBhMSAxIDAgMDAwIDJoM2ExIDEgMCAxMDAtMmgtM3ptLTMgNGExIDEgMCAxMDAgMmguMDFhMSAxIDAgMTAwLTJIN3ptMyAwYTEgMSAwIDEwMCAyaDNhMSAxIDAgMTAwLTJoLTN6IiBjbGlwLXJ1bGU9ImV2ZW5vZGQiPjwvcGF0aD48L3N2Zz4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9ncmVzcy13cmFwcGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZ3Jlc3MtaW5mbyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJoNiBtYi0wIj5UaGVtZXNiZXJnIC0gRGVzaWduIFN5c3RlbTwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic21hbGwgZnctYm9sZCB0ZXh0LWdyYXktNTAwIj48c3Bhbj42MCAlPC9zcGFuPjwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZ3Jlc3MgbWItMCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9ncmVzcy1iYXIgYmctc3VjY2VzcyIgcm9sZT0icHJvZ3Jlc3NiYXIiIGFyaWEtdmFsdWVub3c9IjYwIiBhcmlhLXZhbHVlbWluPSIwIiBhcmlhLXZhbHVlbWF4PSIxMDAiIHN0eWxlPSJ3aWR0aDogNjAlOyI+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8IS0tIFByb2plY3QgMyAtLT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icm93IGFsaWduLWl0ZW1zLWNlbnRlciBtYi00Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1hdXRvIj4KICAgICAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIGljb24tc20gdGV4dC1ncmF5LTUwMCIgZmlsbD0iY3VycmVudENvbG9yIiB2aWV3Qm94PSIwIDAgMjAgMjAiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI+PHBhdGggZD0iTTkgMmExIDEgMCAwMDAgMmgyYTEgMSAwIDEwMC0ySDl6Ij48L3BhdGg+PHBhdGggZmlsbC1ydWxlPSJldmVub2RkIiBkPSJNNCA1YTIgMiAwIDAxMi0yIDMgMyAwIDAwMyAzaDJhMyAzIDAgMDAzLTMgMiAyIDAgMDEyIDJ2MTFhMiAyIDAgMDEtMiAySDZhMiAyIDAgMDEtMi0yVjV6bTMgNGExIDEgMCAwMDAgMmguMDFhMSAxIDAgMTAwLTJIN3ptMyAwYTEgMSAwIDAwMCAyaDNhMSAxIDAgMTAwLTJoLTN6bS0zIDRhMSAxIDAgMTAwIDJoLjAxYTEgMSAwIDEwMC0ySDd6bTMgMGExIDEgMCAxMDAgMmgzYTEgMSAwIDEwMC0yaC0zeiIgY2xpcC1ydWxlPSJldmVub2RkIj48L3BhdGg+PC9zdmc+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbCI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZ3Jlc3Mtd3JhcHBlciI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2dyZXNzLWluZm8iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaDYgbWItMCI+SG9tZXBhZ2UgRGVzaWduIGluIEZpZ21hPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzbWFsbCBmdy1ib2xkIHRleHQtZ3JheS01MDAiPjxzcGFuPjQ1ICU8L3NwYW4+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9ncmVzcyBtYi0wIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2dyZXNzLWJhciBiZy13YXJuaW5nIiByb2xlPSJwcm9ncmVzc2JhciIgYXJpYS12YWx1ZW5vdz0iNDUiIGFyaWEtdmFsdWVtaW49IjAiIGFyaWEtdmFsdWVtYXg9IjEwMCIgc3R5bGU9IndpZHRoOiA0NSU7Ij48L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwhLS0gUHJvamVjdCA0IC0tPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3cgYWxpZ24taXRlbXMtY2VudGVyIG1iLTMiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLWF1dG8iPgogICAgICAgICAgICAgICAgICAgIDxzdmcgY2xhc3M9Imljb24gaWNvbi1zbSB0ZXh0LWdyYXktNTAwIiBmaWxsPSJjdXJyZW50Q29sb3IiIHZpZXdCb3g9IjAgMCAyMCAyMCIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj48cGF0aCBkPSJNOSAyYTEgMSAwIDAwMCAyaDJhMSAxIDAgMTAwLTJIOXoiPjwvcGF0aD48cGF0aCBmaWxsLXJ1bGU9ImV2ZW5vZGQiIGQ9Ik00IDVhMiAyIDAgMDEyLTIgMyAzIDAgMDAzIDNoMmEzIDMgMCAwMDMtMyAyIDIgMCAwMTIgMnYxMWEyIDIgMCAwMS0yIDJINmEyIDIgMCAwMS0yLTJWNXptMyA0YTEgMSAwIDAwMCAyaC4wMWExIDEgMCAxMDAtMkg3em0zIDBhMSAxIDAgMDAwIDJoM2ExIDEgMCAxMDAtMmgtM3ptLTMgNGExIDEgMCAxMDAgMmguMDFhMSAxIDAgMTAwLTJIN3ptMyAwYTEgMSAwIDEwMCAyaDNhMSAxIDAgMTAwLTJoLTN6IiBjbGlwLXJ1bGU9ImV2ZW5vZGQiPjwvcGF0aD48L3N2Zz4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9ncmVzcy13cmFwcGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvZ3Jlc3MtaW5mbyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJoNiBtYi0wIj5CYWNrZW5kIGZvciBUaGVtZXNiZXJnIHYyPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzbWFsbCBmdy1ib2xkIHRleHQtZ3JheS01MDAiPjxzcGFuPjM0ICU8L3NwYW4+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9ncmVzcyBtYi0wIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2dyZXNzLWJhciBiZy1kYW5nZXIiIHJvbGU9InByb2dyZXNzYmFyIiBhcmlhLXZhbHVlbm93PSIzNCIgYXJpYS12YWx1ZW1pbj0iMCIgYXJpYS12YWx1ZW1heD0iMTAwIiBzdHlsZT0id2lkdGg6IDM0JTsiPjwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2Pgo8L2Rpdj4=",
                "widget5-ph.html": "PGRpdiBpZD0iZHJhZ2dhYmxlLXdpZGdldC01LXBsYWNlaG9sZGVyIiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC14bC00IG1iLTQgZHJhZ2dhYmxlIiBkcmFnZ2FibGU9InRydWUiCiAgICBzdHlsZT0id2lkdGg6IDEwMCU7Ij4KICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgPGltZyBjbGFzcz0naW1nLWZsdWlkIHctMTAwJwogICAgICAgICAgICBzcmM9Imh0dHBzOi8vZ2l0aHViLXByb2R1Y3Rpb24tdXNlci1hc3NldC02MjEwZGYuczMuYW1hem9uYXdzLmNvbS81MTA3MDEwNC8yNjA3NzA4MzQtOTRmNzRiNjYtMDU0Ni00OWE1LWI3YjEtYjI4ODE3Y2IwZTYwLnBuZyIKICAgICAgICAgICAgYWx0PSIiIC8+CiAgICA8L2Rpdj4KPC9kaXY+",
                "widget8.html": "PGRpdiBpZD0iZHJhZ2dhYmxlLXdpZGdldC04IiBjbGFzcz0iY29sLTEyIGNvbC1zbS0xMiBjb2wteGwtMTIgbWItNCBkcmFnZ2FibGUiIGRyYWdnYWJsZT0idHJ1ZSIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij4KICA8ZGl2IGNsYXNzPSJjYXJkIGJvcmRlci0wIHNoYWRvdyI+CiAgICA8ZGl2IGNsYXNzPSJjYXJkLWJvZHkiPgogICAgICA8ZGl2IGNsYXNzPSJkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIGp1c3RpZnktY29udGVudC1iZXR3ZWVuIGJvcmRlci1ib3R0b20gcGItMyI+CiAgICAgICAgPGRpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9Img2IG1iLTAgZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciI+PHN2ZyBjbGFzcz0iaWNvbiBpY29uLXhzIHRleHQtZ3JheS01MDAgbWUtMiIKICAgICAgICAgICAgICBmaWxsPSJjdXJyZW50Q29sb3IiIHZpZXdCb3g9IjAgMCAyMCAyMCIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICAgICAgICAgICAgICA8cGF0aCBmaWxsLXJ1bGU9ImV2ZW5vZGQiCiAgICAgICAgICAgICAgICBkPSJNMTAgMThhOCA4IDAgMTAwLTE2IDggOCAwIDAwMCAxNnpNNC4zMzIgOC4wMjdhNi4wMTIgNi4wMTIgMCAwMTEuOTEyLTIuNzA2QzYuNTEyIDUuNzMgNi45NzQgNiA3LjUgNkExLjUgMS41IDAgMDE5IDcuNVY4YTIgMiAwIDAwNCAwIDIgMiAwIDAxMS41MjMtMS45NDNBNS45NzcgNS45NzcgMCAwMTE2IDEwYzAgLjM0LS4wMjguNjc1LS4wODMgMUgxNWEyIDIgMCAwMC0yIDJ2Mi4xOTdBNS45NzMgNS45NzMgMCAwMTEwIDE2di0yYTIgMiAwIDAwLTItMiAyIDIgMCAwMS0yLTIgMiAyIDAgMDAtMS42NjgtMS45NzN6IgogICAgICAgICAgICAgICAgY2xpcC1ydWxlPSJldmVub2RkIj48L3BhdGg+CiAgICAgICAgICAgIDwvc3ZnPiBHbG9iYWwgUmFuazwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXY+PGEgaHJlZj0iIyIgY2xhc3M9ImQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIgZnctYm9sZCB0ZXh0LWRhcmsiPiM3NTUgPHN2ZyBjbGFzcz0iaWNvbiBpY29uLXhzIHRleHQtZ3JheS01MDAgbXMtMSIKICAgICAgICAgICAgICBmaWxsPSJjdXJyZW50Q29sb3IiIHZpZXdCb3g9IjAgMCAyMCAyMCIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICAgICAgICAgICAgICA8cGF0aCBmaWxsLXJ1bGU9ImV2ZW5vZGQiCiAgICAgICAgICAgICAgICBkPSJNMyAzYTEgMSAwIDAwMCAydjhhMiAyIDAgMDAyIDJoMi41ODZsLTEuMjkzIDEuMjkzYTEgMSAwIDEwMS40MTQgMS40MTRMMTAgMTUuNDE0bDIuMjkzIDIuMjkzYTEgMSAwIDAwMS40MTQtMS40MTRMMTIuNDE0IDE1SDE1YTIgMiAwIDAwMi0yVjVhMSAxIDAgMTAwLTJIM3ptMTEuNzA3IDQuNzA3YTEgMSAwIDAwLTEuNDE0LTEuNDE0TDEwIDkuNTg2IDguNzA3IDguMjkzYTEgMSAwIDAwLTEuNDE0IDBsLTIgMmExIDEgMCAxMDEuNDE0IDEuNDE0TDggMTAuNDE0bDEuMjkzIDEuMjkzYTEgMSAwIDAwMS40MTQgMGw0LTR6IgogICAgICAgICAgICAgICAgY2xpcC1ydWxlPSJldmVub2RkIj48L3BhdGg+CiAgICAgICAgICAgIDwvc3ZnPjwvYT48L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIganVzdGlmeS1jb250ZW50LWJldHdlZW4gYm9yZGVyLWJvdHRvbSBweS0zIj4KICAgICAgICA8ZGl2PgogICAgICAgICAgPGRpdiBjbGFzcz0iaDYgbWItMCBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIj48c3ZnIGNsYXNzPSJpY29uIGljb24teHMgdGV4dC1ncmF5LTUwMCBtZS0yIgogICAgICAgICAgICAgIGZpbGw9ImN1cnJlbnRDb2xvciIgdmlld0JveD0iMCAwIDIwIDIwIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciPgogICAgICAgICAgICAgIDxwYXRoIGZpbGwtcnVsZT0iZXZlbm9kZCIKICAgICAgICAgICAgICAgIGQ9Ik0zIDZhMyAzIDAgMDEzLTNoMTBhMSAxIDAgMDEuOCAxLjZMMTQuMjUgOGwyLjU1IDMuNEExIDEgMCAwMTE2IDEzSDZhMSAxIDAgMDAtMSAxdjNhMSAxIDAgMTEtMiAwVjZ6IgogICAgICAgICAgICAgICAgY2xpcC1ydWxlPSJldmVub2RkIj48L3BhdGg+CiAgICAgICAgICAgIDwvc3ZnPiBDb3VudHJ5IFJhbms8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9InNtYWxsIGNhcmQtc3RhdHMiPlVuaXRlZCBTdGF0ZXMgPHN2ZyBjbGFzcz0iaWNvbiBpY29uLXhzIHRleHQtc3VjY2VzcyIgZmlsbD0iY3VycmVudENvbG9yIgogICAgICAgICAgICAgIHZpZXdCb3g9IjAgMCAyMCAyMCIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICAgICAgICAgICAgICA8cGF0aCBmaWxsLXJ1bGU9ImV2ZW5vZGQiCiAgICAgICAgICAgICAgICBkPSJNMTQuNzA3IDEyLjcwN2ExIDEgMCAwMS0xLjQxNCAwTDEwIDkuNDE0bC0zLjI5MyAzLjI5M2ExIDEgMCAwMS0xLjQxNC0xLjQxNGw0LTRhMSAxIDAgMDExLjQxNCAwbDQgNGExIDEgMCAwMTAgMS40MTR6IgogICAgICAgICAgICAgICAgY2xpcC1ydWxlPSJldmVub2RkIj48L3BhdGg+CiAgICAgICAgICAgIDwvc3ZnPjwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXY+PGEgaHJlZj0iIyIgY2xhc3M9ImQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIgZnctYm9sZCB0ZXh0LWRhcmsiPiMzMiA8c3ZnIGNsYXNzPSJpY29uIGljb24teHMgdGV4dC1ncmF5LTUwMCBtcy0xIgogICAgICAgICAgICAgIGZpbGw9ImN1cnJlbnRDb2xvciIgdmlld0JveD0iMCAwIDIwIDIwIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciPgogICAgICAgICAgICAgIDxwYXRoIGZpbGwtcnVsZT0iZXZlbm9kZCIKICAgICAgICAgICAgICAgIGQ9Ik0zIDNhMSAxIDAgMDAwIDJ2OGEyIDIgMCAwMDIgMmgyLjU4NmwtMS4yOTMgMS4yOTNhMSAxIDAgMTAxLjQxNCAxLjQxNEwxMCAxNS40MTRsMi4yOTMgMi4yOTNhMSAxIDAgMDAxLjQxNC0xLjQxNEwxMi40MTQgMTVIMTVhMiAyIDAgMDAyLTJWNWExIDEgMCAxMDAtMkgzem0xMS43MDcgNC43MDdhMSAxIDAgMDAtMS40MTQtMS40MTRMMTAgOS41ODYgOC43MDcgOC4yOTNhMSAxIDAgMDAtMS40MTQgMGwtMiAyYTEgMSAwIDEwMS40MTQgMS40MTRMOCAxMC40MTRsMS4yOTMgMS4yOTNhMSAxIDAgMDAxLjQxNCAwbDQtNHoiCiAgICAgICAgICAgICAgICBjbGlwLXJ1bGU9ImV2ZW5vZGQiPjwvcGF0aD4KICAgICAgICAgICAgPC9zdmc+PC9hPjwvZGl2PgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlbiBwdC0zIj4KICAgICAgICA8ZGl2PgogICAgICAgICAgPGRpdiBjbGFzcz0iaDYgbWItMCBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIj48c3ZnIGNsYXNzPSJpY29uIGljb24teHMgdGV4dC1ncmF5LTUwMCBtZS0yIgogICAgICAgICAgICAgIGZpbGw9ImN1cnJlbnRDb2xvciIgdmlld0JveD0iMCAwIDIwIDIwIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciPgogICAgICAgICAgICAgIDxwYXRoIGZpbGwtcnVsZT0iZXZlbm9kZCIKICAgICAgICAgICAgICAgIGQ9Ik0yIDZhMiAyIDAgMDEyLTJoNGwyIDJoNGEyIDIgMCAwMTIgMnYxSDhhMyAzIDAgMDAtMyAzdjEuNWExLjUgMS41IDAgMDEtMyAwVjZ6IiBjbGlwLXJ1bGU9ImV2ZW5vZGQiPgogICAgICAgICAgICAgIDwvcGF0aD4KICAgICAgICAgICAgICA8cGF0aCBkPSJNNiAxMmEyIDIgMCAwMTItMmg4YTIgMiAwIDAxMiAydjJhMiAyIDAgMDEtMiAySDJoMmEyIDIgMCAwMDItMnYtMnoiPjwvcGF0aD4KICAgICAgICAgICAgPC9zdmc+IENhdGVnb3J5IFJhbms8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9InNtYWxsIGNhcmQtc3RhdHMiPkNvbXB1dGVycyBFbGVjdHJvbmljcyAmZ3Q7IFRlY2hub2xvZ3kgPHN2ZyBjbGFzcz0iaWNvbiBpY29uLXhzIHRleHQtc3VjY2VzcyIKICAgICAgICAgICAgICBmaWxsPSJjdXJyZW50Q29sb3IiIHZpZXdCb3g9IjAgMCAyMCAyMCIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICAgICAgICAgICAgICA8cGF0aCBmaWxsLXJ1bGU9ImV2ZW5vZGQiCiAgICAgICAgICAgICAgICBkPSJNMTQuNzA3IDEyLjcwN2ExIDEgMCAwMS0xLjQxNCAwTDEwIDkuNDE0bC0zLjI5MyAzLjI5M2ExIDEgMCAwMS0xLjQxNC0xLjQxNGw0LTRhMSAxIDAgMDExLjQxNCAwbDQgNGExIDEgMCAwMTAgMS40MTR6IgogICAgICAgICAgICAgICAgY2xpcC1ydWxlPSJldmVub2RkIj48L3BhdGg+CiAgICAgICAgICAgIDwvc3ZnPjwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXY+PGEgaHJlZj0iIyIgY2xhc3M9ImQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIgZnctYm9sZCB0ZXh0LWRhcmsiPiMxMSA8c3ZnIGNsYXNzPSJpY29uIGljb24teHMgdGV4dC1ncmF5LTUwMCBtcy0xIgogICAgICAgICAgICAgIGZpbGw9ImN1cnJlbnRDb2xvciIgdmlld0JveD0iMCAwIDIwIDIwIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciPgogICAgICAgICAgICAgIDxwYXRoIGZpbGwtcnVsZT0iZXZlbm9kZCIKICAgICAgICAgICAgICAgIGQ9Ik0zIDNhMSAxIDAgMDAwIDJ2OGEyIDIgMCAwMDIgMmgyLjU4NmwtMS4yOTMgMS4yOTNhMSAxIDAgMTAxLjQxNCAxLjQxNEwxMCAxNS40MTRsMi4yOTMgMi4yOTNhMSAxIDAgMDAxLjQxNC0xLjQxNEwxMi40MTQgMTVIMTVhMiAyIDAgMDAyLTJWNWExIDEgMCAxMDAtMkgzem0xMS43MDcgNC43MDdhMSAxIDAgMDAtMS40MTQtMS40MTRMMTAgOS41ODYgOC43MDcgOC4yOTNhMSAxIDAgMDAtMS40MTQgMGwtMiAyYTEgMSAwIDEwMS40MTQgMS40MTRMOCAxMC40MTRsMS4yOTMgMS4yOTNhMSAxIDAgMDAxLjQxNCAwbDQtNHoiCiAgICAgICAgICAgICAgICBjbGlwLXJ1bGU9ImV2ZW5vZGQiPjwvcGF0aD4KICAgICAgICAgICAgPC9zdmc+PC9hPjwvZGl2PgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDwvZGl2Pgo8L2Rpdj4=",
                "widget4-ph.html": "PGRpdiBpZD0iZHJhZ2dhYmxlLXdpZGdldC00LXBsYWNlaG9sZGVyIiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC14bC00IG1iLTQgZHJhZ2dhYmxlIiBkcmFnZ2FibGU9InRydWUiCiAgICBzdHlsZT0id2lkdGg6IDEwMCU7Ij4KICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgPGltZyBjbGFzcz0naW1nLWZsdWlkIHctMTAwJwogICAgICAgICAgICBzcmM9Imh0dHBzOi8vZ2l0aHViLXByb2R1Y3Rpb24tdXNlci1hc3NldC02MjEwZGYuczMuYW1hem9uYXdzLmNvbS81MTA3MDEwNC8yNTkwMzk5MTMtNmJmMmI4NGMtNWVmYy00ZjQ5LTgwZWMtMWM3OWE5YWI1NGI1LnBuZyIKICAgICAgICAgICAgYWx0PSIiIC8+CiAgICA8L2Rpdj4KPC9kaXY+",
                "widget5.html": "",
                "widget6-ph.html": "PGRpdiBpZD0iZHJhZ2dhYmxlLXdpZGdldC02LXBsYWNlaG9sZGVyIiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC14bC00IG1iLTQgZHJhZ2dhYmxlIiBkcmFnZ2FibGU9InRydWUiCiAgICBzdHlsZT0id2lkdGg6IDEwMCU7Ij4KICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgPGltZyBjbGFzcz0naW1nLWZsdWlkIHctMTAwJwogICAgICAgICAgICBzcmM9Imh0dHBzOi8vZ2l0aHViLXByb2R1Y3Rpb24tdXNlci1hc3NldC02MjEwZGYuczMuYW1hem9uYXdzLmNvbS81MTA3MDEwNC8yNjA3NzE0NDMtMjExOGFjY2YtZDEzNC00ZGQ5LTllN2EtY2I2MWE3N2QxYmJhLnBuZyIKICAgICAgICAgICAgYWx0PSIiIC8+CiAgICA8L2Rpdj4KPC9kaXY+",
                "widget2.html": "PGRpdiBpZD0iZHJhZ2dhYmxlLXdpZGdldC0yIiBjbGFzcz0iY29sLTEyIGNvbC1zbS0xMiBjb2wteGwtMTIgbWItNCBkcmFnZ2FibGUiIGRyYWdnYWJsZT0idHJ1ZSIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij4KICAgIDxkaXYgY2xhc3M9ImNhcmQgYm9yZGVyLTAgc2hhZG93Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWJvZHkiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3cgZC1ibG9jayBkLXhsLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIj4KICAgICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgICAgICBjbGFzcz0iY29sLTEyIGNvbC14bC01IHRleHQteGwtY2VudGVyIG1iLTMgbWIteGwtMCBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIGp1c3RpZnktY29udGVudC14bC1jZW50ZXIiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imljb24tc2hhcGUgaWNvbi1zaGFwZS1zZWNvbmRhcnkgcm91bmRlZCBtZS00IG1lLXNtLTAiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIiBmaWxsPSJjdXJyZW50Q29sb3IiIHZpZXdCb3g9IjAgMCAyMCAyMCIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGZpbGwtcnVsZT0iZXZlbm9kZCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkPSJNMTAgMmE0IDQgMCAwMC00IDR2MUg1YTEgMSAwIDAwLS45OTQuODlsLTEgOUExIDEgMCAwMDQgMThoMTJhMSAxIDAgMDAuOTk0LTEuMTFsLTEtOUExIDEgMCAwMDE1IDdoLTFWNmE0IDQgMCAwMC00LTR6bTIgNVY2YTIgMiAwIDEwLTQgMHYxaDR6bS02IDNhMSAxIDAgMTEyIDAgMSAxIDAgMDEtMiAwem03LTFhMSAxIDAgMTAwIDIgMSAxIDAgMDAwLTJ6IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsaXAtcnVsZT0iZXZlbm9kZCI+PC9wYXRoPgogICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkLXNtLW5vbmUiPgogICAgICAgICAgICAgICAgICAgICAgICA8aDIgY2xhc3M9ImZ3LWV4dHJhYm9sZCBoNSI+UmV2ZW51ZTwvaDI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxoMyBjbGFzcz0ibWItMSI+JDQzLDU5NDwvaDM+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wteGwtNyBweC14bC0wIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkLW5vbmUgZC1zbS1ibG9jayI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0iaDYgdGV4dC1ncmF5LTQwMCBtYi0wIj5SZXZlbnVlPC9oMj4KICAgICAgICAgICAgICAgICAgICAgICAgPGgzIGNsYXNzPSJmdy1leHRyYWJvbGQgbWItMiI+JDQzLDU5NDwvaDM+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPHNtYWxsIGNsYXNzPSJkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIHRleHQtZ3JheS01MDAiPgogICAgICAgICAgICAgICAgICAgICAgICBGZWIgMSAtIEFwciAxLAogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIGljb24teHhzIHRleHQtZ3JheS01MDAgbXMtMiBtZS0xIiBmaWxsPSJjdXJyZW50Q29sb3IiIHZpZXdCb3g9IjAgMCAyMCAyMCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBmaWxsLXJ1bGU9ImV2ZW5vZGQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZD0iTTEwIDE4YTggOCAwIDEwMC0xNiA4IDggMCAwMDAgMTZ6TTQuMzMyIDguMDI3YTYuMDEyIDYuMDEyIDAgMDExLjkxMi0yLjcwNkM2LjUxMiA1LjczIDYuOTc0IDYgNy41IDZBMS41IDEuNSAwIDAxOSA3LjVWOGEyIDIgMCAwMDQgMCAyIDIgMCAwMTEuNTIzLTEuOTQzQTUuOTc3IDUuOTc3IDAgMDExNiAxMGMwIC4zNC0uMDI4LjY3NS0uMDgzIDFIMTVhMiAyIDAgMDAtMiAydjIuMTk3QTUuOTczIDUuOTczIDAgMDExMCAxNnYtMmEyIDIgMCAwMC0yLTIgMiAyIDAgMDEtMi0yIDIgMiAwIDAwLTEuNjY4LTEuOTczeiIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGlwLXJ1bGU9ImV2ZW5vZGQiPjwvcGF0aD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9zdmc+CiAgICAgICAgICAgICAgICAgICAgICAgIEdFUgogICAgICAgICAgICAgICAgICAgIDwvc21hbGw+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic21hbGwgZC1mbGV4IG10LTEiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PlNpbmNlIGxhc3QgbW9udGggPHN2ZyBjbGFzcz0iaWNvbiBpY29uLXhzIHRleHQtZGFuZ2VyIiBmaWxsPSJjdXJyZW50Q29sb3IiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlld0JveD0iMCAwIDIwIDIwIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGZpbGwtcnVsZT0iZXZlbm9kZCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZD0iTTUuMjkzIDcuMjkzYTEgMSAwIDAxMS40MTQgMEwxMCAxMC41ODZsMy4yOTMtMy4yOTNhMSAxIDAgMTExLjQxNCAxLjQxNGwtNCA0YTEgMSAwIDAxLTEuNDE0IDBsLTQtNGExIDEgMCAwMTAtMS40MTR6IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGlwLXJ1bGU9ImV2ZW5vZGQiPjwvcGF0aD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3ZnPjxzcGFuIGNsYXNzPSJ0ZXh0LWRhbmdlciBmdy1ib2xkZXIiPjIlPC9zcGFuPjwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CjwvZGl2Pg==",
                "widget3.html": "PGRpdiBpZD0iZHJhZ2dhYmxlLXdpZGdldC0zIiBjbGFzcz0iY29sLTEyIGNvbC1zbS0xMiBjb2wteGwtMTIgbWItNCBkcmFnZ2FibGUiIGRyYWdnYWJsZT0idHJ1ZSIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij4KICAgIDxkaXYgY2xhc3M9ImNhcmQgYm9yZGVyLTAgc2hhZG93Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWJvZHkiPgogICAgICAgICAgICA8aDIgY2xhc3M9ImZzLTUgZnctYm9sZCBtYi0xIj5BY3F1aXNpdGlvbjwvaDI+CiAgICAgICAgICAgIDxwPlRlbGxzIHlvdSB3aGVyZSB5b3VyIHZpc2l0b3JzIG9yaWdpbmF0ZWQgZnJvbSwgc3VjaCBhcyBzZWFyY2ggZW5naW5lcywgc29jaWFsIG5ldHdvcmtzIG9yIHdlYnNpdGUKICAgICAgICAgICAgICAgIHJlZmVycmFscy48L3A+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImQtYmxvY2siPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciBtZS01Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpY29uLXNoYXBlIGljb24tc20gaWNvbi1zaGFwZS1kYW5nZXIgcm91bmRlZCBtZS0zIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBmaWxsPSJjdXJyZW50Q29sb3IiIHZpZXdCb3g9IjAgMCAyMCAyMCIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGZpbGwtcnVsZT0iZXZlbm9kZCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkPSJNMyAzYTEgMSAwIDAwMCAydjhhMiAyIDAgMDAyIDJoMi41ODZsLTEuMjkzIDEuMjkzYTEgMSAwIDEwMS40MTQgMS40MTRMMTAgMTUuNDE0bDIuMjkzIDIuMjkzYTEgMSAwIDAwMS40MTQtMS40MTRMMTIuNDE0IDE1SDE1YTIgMiAwIDAwMi0yVjVhMSAxIDAgMTAwLTJIM3ptMTEgNGExIDEgMCAxMC0yIDB2NGExIDEgMCAxMDIgMFY3em0tMyAxYTEgMSAwIDEwLTIgMHYzYTEgMSAwIDEwMiAwVjh6TTggOWExIDEgMCAwMC0yIDB2MmExIDEgMCAxMDIgMFY5eiIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGlwLXJ1bGU9ImV2ZW5vZGQiPjwvcGF0aD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9zdmc+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZC1ibG9jayI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0ibWItMCI+Qm91bmNlIFJhdGU8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICA8aDQgY2xhc3M9Im1iLTAiPjMzLjUwJTwvaDQ+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIgcHQtMyI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaWNvbi1zaGFwZSBpY29uLXNtIGljb24tc2hhcGUtcHVycGxlIHJvdW5kZWQgbWUtMyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgZmlsbD0iY3VycmVudENvbG9yIiB2aWV3Qm94PSIwIDAgMjAgMjAiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGQ9Ik0yIDExYTEgMSAwIDAxMS0xaDJhMSAxIDAgMDExIDF2NWExIDEgMCAwMS0xIDFIM2ExIDEgMCAwMS0xLTF2LTV6TTggN2ExIDEgMCAwMTEtMWgyYTEgMSAwIDAxMSAxdjlhMSAxIDAgMDEtMSAxSDlhMSAxIDAgMDEtMS0xVjd6TTE0IDRhMSAxIDAgMDExLTFoMmExIDEgMCAwMTEgMXYxMmExIDEgMCAwMS0xIDFoLTJhMSAxIDAgMDEtMS0xVjR6Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcGF0aD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9zdmc+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZC1ibG9jayI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0ibWItMCI+U2Vzc2lvbnM8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICA8aDQgY2xhc3M9Im1iLTAiPjksNTY3PC9oND4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2Pgo8L2Rpdj4=",
                "widget.html": "PGRpdiBpZD0iZHJhZ2dhYmxlLXdpZGdldC0xIiBjbGFzcz0iY29sLTEyIGNvbC1zbS0xMiBjb2wteGwtMTIgbWItNCBkcmFnZ2FibGUiIGRyYWdnYWJsZT0idHJ1ZSIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij4KICAgIDxkaXYgY2xhc3M9ImNhcmQgYm9yZGVyLTAgc2hhZG93Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJjYXJkLWJvZHkiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3cgZC1ibG9jayBkLXhsLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIj4KICAgICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgICAgICBjbGFzcz0iY29sLTEyIGNvbC14bC01IHRleHQteGwtY2VudGVyIG1iLTMgbWIteGwtMCBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIGp1c3RpZnktY29udGVudC14bC1jZW50ZXIiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imljb24tc2hhcGUgaWNvbi1zaGFwZS1wcmltYXJ5IHJvdW5kZWQgbWUtNCBtZS1zbS0wIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyBjbGFzcz0iaWNvbiIgZmlsbD0iY3VycmVudENvbG9yIiB2aWV3Qm94PSIwIDAgMjAgMjAiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGQ9Ik0xMyA2YTMgMyAwIDExLTYgMCAzIDMgMCAwMTYgMHpNMTggOGEyIDIgMCAxMS00IDAgMiAyIDAgMDE0IDB6TTE0IDE1YTQgNCAwIDAwLTggMHYzaDh2LTN6TTYgOGEyIDIgMCAxMS00IDAgMiAyIDAgMDE0IDB6TTE2IDE4di0zYTUuOTcyIDUuOTcyIDAgMDAtLjc1LTIuOTA2QTMuMDA1IDMuMDA1IDAgMDExOSAxNXYzaC0zek00Ljc1IDEyLjA5NEE1Ljk3MyA1Ljk3MyAwIDAwNCAxNXYzSDF2LTNhMyAzIDAgMDEzLjc1LTIuOTA2eiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3BhdGg+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc3ZnPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImQtc20tbm9uZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0iaDUiPkN1c3RvbWVyczwvaDI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxoMyBjbGFzcz0iZnctZXh0cmFib2xkIG1iLTEiPjM0NSw2Nzg8L2gzPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMTIgY29sLXhsLTcgcHgteGwtMCI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZC1ub25lIGQtc20tYmxvY2siPgogICAgICAgICAgICAgICAgICAgICAgICA8aDIgY2xhc3M9Img2IHRleHQtZ3JheS00MDAgbWItMCI+Q3VzdG9tZXJzPC9oMj4KICAgICAgICAgICAgICAgICAgICAgICAgPGgzIGNsYXNzPSJmdy1leHRyYWJvbGQgbWItMiI+MzQ1azwvaDM+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPHNtYWxsIGNsYXNzPSJkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIHRleHQtZ3JheS01MDAiPgogICAgICAgICAgICAgICAgICAgICAgICBGZWIgMSAtIEFwciAxLAogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIGNsYXNzPSJpY29uIGljb24teHhzIHRleHQtZ3JheS01MDAgbXMtMiBtZS0xIiBmaWxsPSJjdXJyZW50Q29sb3IiIHZpZXdCb3g9IjAgMCAyMCAyMCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBmaWxsLXJ1bGU9ImV2ZW5vZGQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZD0iTTEwIDE4YTggOCAwIDEwMC0xNiA4IDggMCAwMDAgMTZ6TTQuMzMyIDguMDI3YTYuMDEyIDYuMDEyIDAgMDExLjkxMi0yLjcwNkM2LjUxMiA1LjczIDYuOTc0IDYgNy41IDZBMS41IDEuNSAwIDAxOSA3LjVWOGEyIDIgMCAwMDQgMCAyIDIgMCAwMTEuNTIzLTEuOTQzQTUuOTc3IDUuOTc3IDAgMDExNiAxMGMwIC4zNC0uMDI4LjY3NS0uMDgzIDFIMTVhMiAyIDAgMDAtMiAydjIuMTk3QTUuOTczIDUuOTczIDAgMDExMCAxNnYtMmEyIDIgMCAwMC0yLTIgMiAyIDAgMDEtMi0yIDIgMiAwIDAwLTEuNjY4LTEuOTczeiIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGlwLXJ1bGU9ImV2ZW5vZGQiPjwvcGF0aD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9zdmc+CiAgICAgICAgICAgICAgICAgICAgICAgIFVTQQogICAgICAgICAgICAgICAgICAgIDwvc21hbGw+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic21hbGwgZC1mbGV4IG10LTEiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PlNpbmNlIGxhc3QgbW9udGggPHN2ZyBjbGFzcz0iaWNvbiBpY29uLXhzIHRleHQtc3VjY2VzcyIgZmlsbD0iY3VycmVudENvbG9yIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpZXdCb3g9IjAgMCAyMCAyMCIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBmaWxsLXJ1bGU9ImV2ZW5vZGQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGQ9Ik0xNC43MDcgMTIuNzA3YTEgMSAwIDAxLTEuNDE0IDBMMTAgOS40MTRsLTMuMjkzIDMuMjkzYTEgMSAwIDAxLTEuNDE0LTEuNDE0bDQtNGExIDEgMCAwMTEuNDE0IDBsNCA0YTEgMSAwIDAxMCAxLjQxNHoiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsaXAtcnVsZT0iZXZlbm9kZCI+PC9wYXRoPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zdmc+PHNwYW4gY2xhc3M9InRleHQtc3VjY2VzcyBmdy1ib2xkZXIiPjIyJTwvc3Bhbj48L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2Pgo8L2Rpdj4=",
                "widget7-ph.html": "PGRpdiBpZD0iZHJhZ2dhYmxlLXdpZGdldC03LXBsYWNlaG9sZGVyIiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC14bC00IG1iLTQgZHJhZ2dhYmxlIiBkcmFnZ2FibGU9InRydWUiCiAgICBzdHlsZT0id2lkdGg6IDEwMCU7Ij4KICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgPGltZyBjbGFzcz0naW1nLWZsdWlkIHctMTAwJwogICAgICAgICAgICBzcmM9Ii9pbWcvd2RndDcuanBnIgogICAgICAgICAgICBhbHQ9IiIgLz4KICAgIDwvZGl2Pgo8L2Rpdj4="
            },
            "Footers": {
                "footer-ph.html": "PGRpdiBpZD0iZHJhZ2dhYmxlLWZvb3Rlci0xLXBsYWNlaG9sZGVyIiBjbGFzcz0iY29sLTEyIGNvbC1zbS02IGNvbC14bC00IG1iLTQgZHJhZ2dhYmxlIiBkcmFnZ2FibGU9InRydWUiCiAgICBzdHlsZT0id2lkdGg6IDEwMCU7Ij4KICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgPGltZyBjbGFzcz0naW1nLWZsdWlkIHctMTAwJwogICAgICAgICAgICBzcmM9Imh0dHBzOi8vZ2l0aHViLXByb2R1Y3Rpb24tdXNlci1hc3NldC02MjEwZGYuczMuYW1hem9uYXdzLmNvbS81MTA3MDEwNC8yNjEwNzY5NzctNjI3NGNhZTAtOGQ2NS00NTI0LWEyNDUtODFiYTNhNGRhMjViLnBuZyIKICAgICAgICAgICAgYWx0PSIiIC8+CiAgICA8L2Rpdj4KPC9kaXY+",
                "footer.html": "PGZvb3RlciBpZD0iZHJhZ2dhYmxlLWZvb3Rlci0xIiBjbGFzcz0iYmctd2hpdGUgcm91bmRlZCBzaGFkb3cgcC01IG1iLTIgbXQtMiBkcmFnZ2FibGUiIGRyYWdnYWJsZT0idHJ1ZSIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7Ij4KICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEyIGNvbC1tZC00IGNvbC14bC02IG1iLTIgbWItbWQtMCI+CiAgICAgICAgICAgIDxwIGNsYXNzPSJtYi0wIHRleHQtY2VudGVyIHRleHQtbGctc3RhcnQiPgogICAgICAgICAgICAgICAgJmNvcHk7IENvbXBhbnkKICAgICAgICAgICAgPC9wPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtbWQtOCBjb2wteGwtNiB0ZXh0LWNlbnRlciB0ZXh0LWxnLXN0YXJ0Ij4KICAgICAgICAgICAgPCEtLSBMaXN0IC0tPgogICAgICAgICAgICA8dWwgY2xhc3M9Imxpc3QtaW5saW5lIGxpc3QtZ3JvdXAtZmx1c2ggbGlzdC1ncm91cC1ib3JkZXJsZXNzIHRleHQtbWQtZW5kIG1iLTAiPgogICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJsaXN0LWlubGluZS1pdGVtIHB4LTAgcHgtc20tMiI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iIyI+QWJvdXQ8L2E+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJsaXN0LWlubGluZS1pdGVtIHB4LTAgcHgtc20tMiI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iIyI+Q29udGFjdDwvYT4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgIDwvdWw+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KPC9mb290ZXI+Cg=="
            }
        }
    }
}